user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;

    keepalive_timeout  65;

    gzip on;
    gzip_comp_level 5; # степень сжатия
    gzip_buffers 16 8k; # число и размер буферов
    gzip_min_length 1000;  # минимальный размер для сжатия
    gzip_vary on;  # добавляет заголовок Vary: Accept-Encoding
    gzip_proxied any;  # разрешает сжатие для всех проксированных запросов.
    gzip_disable "msie6";  # Отключает gzip для IE6 (устаревшие браузеры)
    gzip_types
        text/plain
        text/css
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        application/vnd.ms-fontobject
        font/ttf
        font/opentype
        image/svg+xml;

    upstream backend_pool {
        server backend_main:8080 weight=2;
        server backend_sup_1:8080 weight=1;
        server backend_sup_2:8080 weight=1;
        # server host.docker.internal:8888; # прокси на локальный бек на маке
        # server 172.17.0.1:8888; # прокси на локальный бек на линукс, ip можно узнать hostname -I 
    }

    upstream pg_adminer {
        server postgres-adminer:80;
    }
    
    # стандартный DNS Docker
    resolver 127.0.0.11 valid=10s ipv6=off;

    map $request_method $backend_upstream {
        default backend_main:8080;
        GET     backend_pool;
    }

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=custom_cache:10m max_size=500m inactive=60m use_temp_path=off;

    server {
        listen 80;
        listen [::]:80;
        listen 443 ssl;
        listen [::]:443 ssl;

        server_name store.com;
        
        # для конфигурации ssl: https://ssl-config.mozilla.org/
        ssl_certificate /certs/store.crt;
        ssl_certificate_key /certs/store.key;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        location / {
            root /usr/share/nginx/;
            index index.html image.png;

            expires 5m;
            add_header Cache-Control "public, max-age=600";
        }

        location /api {
            rewrite ^/api/(.*)$ /api/v1/$1 break;
            proxy_pass http://$backend_upstream;

            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }

        # для того чтобы делать запросы внутри swagger
        location /api/v1 {
            proxy_pass http://$backend_upstream;

            proxy_cache custom_cache;
            proxy_cache_methods GET;
            proxy_cache_valid 200 5m;
            add_header X-Proxy-Cache $upstream_cache_status;
            proxy_ignore_headers Cache-Control Expires;
        }

        # для swagger
        location = /api/v1 {
            rewrite ^/api/v1(.*)$ /swagger-ui/index.html break;
            proxy_pass http://backend_pool;

            proxy_cache custom_cache;
            proxy_cache_methods GET;
            proxy_cache_valid 200 5m;
            add_header X-Proxy-Cache $upstream_cache_status;
            proxy_ignore_headers Cache-Control Expires;
        }
        location ~ ^/api/(.*\.(css|js|json|png))$ {
            rewrite ^/api/(.*)$ /swagger-ui/$1 break;
            proxy_pass http://backend_pool;

            proxy_cache custom_cache;
            proxy_cache_methods GET;
            proxy_cache_valid 200 5m;
            add_header X-Proxy-Cache $upstream_cache_status;
            proxy_ignore_headers Cache-Control Expires;
        }
        location /docs {
            proxy_pass http://backend_pool;

            proxy_cache custom_cache;
            proxy_cache_methods GET;
            proxy_cache_valid 200 5m;
            add_header X-Proxy-Cache $upstream_cache_status;
            proxy_ignore_headers Cache-Control Expires;
        }              

        location /admin {
            proxy_set_header X-Script-Name /admin;

            proxy_pass http://pg_adminer/;
            proxy_redirect off;
        }

        location /status {
                stub_status on;
                allow all;
        }

        location ~ ^/test(?<link>.*) {
            set $path "swagger-ui";

            if ($link ~ "^swagger-config$") {
                set $path "api";
            }
            return 200 "Host: $host\nX-Real-IP: $remote_addr\nX-Forwarded-For: $proxy_add_x_forwarded_for\nX-Forwarded-Proto: $scheme\ntest: $1\npath: $path\nlink: $link";
        }
    }
}
