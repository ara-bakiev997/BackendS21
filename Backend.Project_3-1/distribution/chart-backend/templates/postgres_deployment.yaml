apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgres.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.postgres.name }}
  replicas: {{ .Values.postgres.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgres.name }}

    spec:
      containers:
        - name: {{ .Values.postgres.name }}
          image: {{ .Values.postgres.image }}
          resources:
            limits:
              memory: "300Mi"
              cpu: "200m"
          ports:
            - containerPort: {{ .Values.postgres.containerPort }}
          env:
            - name: POSTGRES_PASSWORD
              value: admin
            - name: POSTGRES_DB
              value: db
          volumeMounts:
            - name: postgres-stateful-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-stateful-data
          persistentVolumeClaim:
            claimName: {{ .Values.postgres.name }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.postgres.name }}
  labels:
    app: {{ .Values.postgres.name }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Values.postgres.name }}
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/postgres

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.postgres.name }}
spec:
  selector:
    app: {{ .Values.postgres.name }}
  type: {{ .Values.postgres.service.type }}
  ports:
    - port: {{ .Values.postgres.service.port }}
      targetPort: {{ .Values.postgres.containerPort }}
